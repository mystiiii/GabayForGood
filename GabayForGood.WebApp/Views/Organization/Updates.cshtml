@using GabayForGood.WebApp.Models
@model ProjectUpdatesVM
@{
    ViewData["Title"] = "Project Updates -";
}

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f5f5f5;
        margin: 0;
    }

    .dashboard-container {
        max-width: 1200px;
        margin: 20px auto;
        background-color: white;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .dashboard-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        padding-bottom: 20px;
        border-bottom: 2px solid #e0e0e0;
    }

    .dashboard-title {
        font-size: 2.5rem;
        font-weight: bold;
        color: #333;
        margin: 0;
        letter-spacing: 2px;
    }

    .back-btn {
        background-color: #6c757d;
        color: white;
        padding: 12px 25px;
        border: none;
        border-radius: 25px;
        font-weight: bold;
        font-size: 14px;
        cursor: pointer;
        text-decoration: none;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        margin-right: 10px;
    }

        .back-btn:hover {
            background-color: #5a6268;
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
            text-decoration: none;
            color: white;
        }

    .create-btn {
        background-color: #ffd700;
        color: #333;
        padding: 12px 25px;
        border: none;
        border-radius: 25px;
        font-weight: bold;
        font-size: 14px;
        cursor: pointer;
        text-decoration: none;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

        .create-btn:hover {
            background-color: #ffed4a;
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
            text-decoration: none;
            color: #333;
        }

    .header-actions {
        display: flex;
        gap: 10px;
        align-items: center;
    }

    /* Project Details Card - Following Index Style */
    .project-details-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        overflow: hidden;
        margin-bottom: 30px;
        border: none;
    }

    .project-header {
        display: flex;
        gap: 20px;
        margin-bottom: 20px;
    }

    .image-container {
        flex-shrink: 0;
        width: 250px;
        height: 180px;
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        border-radius: 10px;
    }

    .project-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .image-placeholder {
        color: #999;
        font-size: 14px;
        text-align: center;
    }

    .project-info {
        flex: 1;
        padding: 20px;
    }

    .project-title {
        font-size: 24px;
        font-weight: bold;
        color: #333;
        margin-bottom: 10px;
        line-height: 1.3;
    }

    .project-description {
        color: #666;
        font-size: 16px;
        line-height: 1.5;
        margin-bottom: 20px;
    }

    .project-meta {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 15px;
        margin-bottom: 20px;
    }

    .meta-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 8px 0;
        font-size: 14px;
    }

    .meta-label {
        font-weight: 600;
        color: #333;
    }

    .meta-value {
        color: #555;
    }

    .goal-amount {
        font-weight: bold;
        color: #28a745;
        font-size: 16px;
    }

    .current-amount {
        font-weight: bold;
        color: #28a745;
        font-size: 16px;
    }

    .status-badge {
        display: inline-block;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: bold;
        text-transform: uppercase;
    }

    .status-active {
        background-color: #d4edda;
        color: #155724;
    }

    .status-pending {
        background-color: #fff3cd;
        color: #856404;
    }

    .status-completed {
        background-color: #cce5ff;
        color: #004085;
    }

    .funding-section {
        grid-column: 1 / -1;
        padding: 15px;
        background-color: #f8f9fa;
        border-radius: 10px;
        border-left: 5px solid #ffd700;
    }

    .funding-amounts {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
    }

    .progress-bar-container {
        background-color: #e9ecef;
        border-radius: 10px;
        height: 10px;
        overflow: hidden;
        margin-bottom: 8px;
    }

    .progress-bar {
        height: 100%;
        background: linear-gradient(90deg, #28a745 0%, #20c997 100%);
        border-radius: 10px;
        transition: width 0.3s ease;
    }

    .progress-text {
        font-size: 13px;
        color: #666;
        text-align: center;
        font-weight: 600;
    }

    /* Updates Section */
    .updates-section {
        margin-top: 30px;
    }

    .section-title {
        font-size: 1.5rem;
        font-weight: bold;
        color: #333;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 2px solid #e0e0e0;
    }

    /* Updates Grid - Using Index.cshtml Style */
    .updates-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 25px;
        margin-top: 20px;
    }

    .update-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        overflow: hidden;
        transition: all 0.3s ease;
        border: none;
    }

        .update-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

    .update-image-container {
        position: relative;
        height: 200px;
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
    }

    .update-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .update-image-placeholder {
        color: #999;
        font-size: 14px;
        text-align: center;
    }

    .update-card-body {
        padding: 20px;
    }

    .update-title {
        font-size: 18px;
        font-weight: bold;
        color: #333;
        margin-bottom: 8px;
        line-height: 1.3;
    }

    .update-description {
        color: #666;
        font-size: 14px;
        line-height: 1.4;
        margin-bottom: 15px;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .update-date-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
        font-size: 13px;
        color: #666;
        font-weight: 600;
    }

    .actions-section {
        display: flex;
        gap: 8px;
        justify-content: center;
    }

    .action-btn {
        padding: 8px 16px;
        border: none;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
        cursor: pointer;
        text-decoration: none;
        text-align: center;
        transition: all 0.2s ease;
        flex: 1;
        max-width: 80px;
    }

    .btn-edit {
        background-color: #ffc107;
        color: #333;
    }

        .btn-edit:hover {
            background-color: #e0a800;
            text-decoration: none;
            color: #333;
            transform: translateY(-1px);
        }

    .btn-delete {
        background-color: #dc3545;
        color: white;
    }

        .btn-delete:hover {
            background-color: #c82333;
            text-decoration: none;
            color: white;
            transform: translateY(-1px);
        }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #666;
    }

        .empty-state h3 {
            color: #999;
            margin-bottom: 10px;
        }

        .empty-state p {
            color: #aaa;
            font-size: 16px;
        }

    @@media (max-width: 768px) {
        .dashboard-header

    {
        flex-direction: column;
        gap: 15px;
    }

    .dashboard-title {
        font-size: 2rem;
    }

    .header-actions {
        flex-direction: column;
        width: 100%;
    }

    .project-header {
        flex-direction: column;
        gap: 15px;
    }

    .image-container {
        width: 100%;
        height: 200px;
    }

    .project-meta {
        grid-template-columns: 1fr;
    }

    .updates-grid {
        grid-template-columns: 1fr;
        gap: 20px;
    }

    }
</style>

<div class="dashboard-container">
    <div class="dashboard-header">
        <h1 class="dashboard-title">PROJECT UPDATES</h1>
        <div class="header-actions">
            <a asp-controller="Organization" asp-action="Index" class="back-btn">← Back to Dashboard</a>
            <a asp-controller="Organization" asp-action="CreateUpdate" asp-route-id="@Model.Project.ProjectId" class="create-btn">Add Update</a>
        </div>
    </div>

    <!-- Project Details Card - Following Index Style -->
    <div class="project-details-card">
        <div class="project-info">
            <div class="project-header">
                <div class="image-container">
                    @if (!string.IsNullOrEmpty(Model.Project.ImageUrl))
                    {
                        <img src="@Model.Project.ImageUrl" alt="@Model.Project.Title" class="project-image" />
                    }
                    else
                    {
                        <div class="image-placeholder">
                            <i class="fas fa-image fa-2x mb-2"></i><br />
                            No Image Available
                        </div>
                    }
                </div>

                <div style="flex: 1;">
                    <div class="project-title">@Model.Project.Title</div>
                    <div class="project-description">@Model.Project.Description</div>

                    <div class="project-meta">
                        <div class="meta-item">
                            <span class="meta-label">Category:</span>
                            <span class="meta-value">@Model.Project.Category</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Cause:</span>
                            <span class="meta-value">@Model.Project.Cause</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Location:</span>
                            <span class="meta-value">@Model.Project.Location</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Start Date:</span>
                            <span class="meta-value">@Model.Project.StartDate.ToString("MMM dd, yyyy")</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">End Date:</span>
                            <span class="meta-value">@Model.Project.EndDate.ToString("MMM dd, yyyy")</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Status:</span>
                            <span class="meta-value">
                                @{
                                    string statusClass = "status-pending";
                                    if (Model.Project.Status?.ToLower() == "active") statusClass = "status-active";
                                    else if (Model.Project.Status?.ToLower() == "completed") statusClass = "status-completed";
                                }
                                <span class="status-badge @statusClass">@Model.Project.Status</span>
                            </span>
                        </div>

                        <!-- Funding Section -->
                        <div class="funding-section">
                            @{
                                decimal currentAmount = Model.Project.CurrentAmount;
                                decimal goalAmount = Model.Project.GoalAmount;
                                decimal percentage = goalAmount > 0 ? (currentAmount / goalAmount) * 100 : 0;
                            }
                            <div class="funding-amounts">
                                <span class="current-amount">₱@currentAmount.ToString("N0") raised</span>
                                <span class="goal-amount">₱@goalAmount.ToString("N0") goal</span>
                            </div>
                            <div class="progress-bar-container">
                                <div class="progress-bar" style="width: @Math.Min(percentage, 100)%"></div>
                            </div>
                            <div class="progress-text">@percentage.ToString("F1")% Funded</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Updates Section -->
    <div class="updates-section">
        <h2 class="section-title">Project Updates</h2>

        @if (Model.Updates == null || Model.Updates.Count < 1)
        {
            <div class="empty-state">
                <h3>No Updates Yet</h3>
                <p>No updates have been posted for this project. Click "Add Update" to create the first update!</p>
            </div>
        }
        else
        {
            <div class="updates-grid">
                @foreach (var update in Model.Updates.OrderByDescending(u => u.CreatedAt))
                {
                    <div class="update-card">
                        <div class="update-image-container">
                            @if (!string.IsNullOrEmpty(update.ImageUrl))
                            {
                                <img src="@update.ImageUrl" alt="@update.Title" class="update-image" />
                            }
                            else
                            {
                                <div class="update-image-placeholder">
                                    <i class="fas fa-image fa-2x mb-2"></i><br />
                                    No Image Available
                                </div>
                            }
                        </div>

                        <div class="update-card-body">
                            <h6 class="update-title">@update.Title</h6>
                            <p class="update-description">@update.Description</p>

                            <div class="update-date-section">
                                <span>@update.CreatedAt.ToString("MMM dd, yyyy")</span>
                                <span>@update.CreatedAt.ToString("h:mm tt")</span>
                            </div>

                            <div class="actions-section">
                                <a asp-controller="Organization" asp-action="EditUpdate" asp-route-id="@update.ProjectUpdateId" class="action-btn btn-edit">Edit</a>
                                <form asp-controller="Organization" asp-action="DeleteUpdateConfirmed" asp-route-id="@update.ProjectUpdateId" method="post" style="flex: 1; max-width: 80px;" onsubmit="return confirm('Are you sure you want to delete this update?')">
                                    <button type="submit" class="action-btn btn-delete" style="width: 100%;">Delete</button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>